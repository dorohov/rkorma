/*
@url-site:'http://localhost:5891';
@url-path:'@{url-site}';
@url-path-css:'@{url-path}/css';
@url-path-img:'@{url-path}/img';
@url-path-js:'@{url-path}/js';
*/

@url-site:'';
@url-path:'';
@url-path-css:'@{url-path}/css';
@url-path-img:'@{url-path}/img';
@url-path-js:'@{url-path}/js';

@media-size-xxs: ~"(max-width: 480px)";
@media-size-xs: ~"(max-width: 767px)";
@media-no-phone: ~"(min-width: 768px)";
@media-size-sm: ~"(min-width: 768px) and (max-width: 991px)";
@media-size-md: ~"(min-width: 992px) and (max-width: 1199px)";
@media-size-lg: ~"(min-width: 1200px) and (max-width: 1399px)";
@media-size-xl: ~"(min-width: 1400px)";
@media-screen: ~"(min-width: 992px)";
@media-device: ~"(max-width: 991px)";
@media-size-portrait: ~"all and (orientation:portrait)";
@media-size-landscape: ~"all and (orientation:landscape)";
@media-size-retina: ~"all and (-webkit-min-device-pixel-ratio: 1.5), only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-ms-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5)";
@media-size-print: ~"print";

@trans-speed: 0.4s;

@c-hex-w: #ffffff;
@c-hex-b: #000000;
@white: #ffffff;
@black: #000000;
@green: #1C9542;
@green-d: rgb(28, 149, 63);
@blue: rgb(51, 153, 204);
@base: inherit;
#site {
	
  .bg(@color:#ffffff) {
    background-color:@color;
  }
	.color(@color:#ffffff) {
		color:@color;
	}
	.underline(@val:underline) {
		text-decoration:@val;
	}
	.uppercase(@val:uppercase) {
		text-transform:@val;
	}
	.size(@val:10px) {
		font-size:@val;
	}
	.bold(@val:bold) {
		font-weight:@val;
	}
	.italic(@val:italic) {
		font-style:@val;
	}
	.z(@val:1) {
		z-index:@val;
	}
	
}
.clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}
.blue{color: @blue}
.white{color: @white}


.transform(...) {
  -webkit-transform: @arguments;
  -moz-transform: @arguments;
  -o-transform: @arguments;
  -ms-transform: @arguments;
  transform: @arguments;
}
.rotation(@deg:5deg){
  .transform(rotate(@deg));
}
.rotation-translate(@deg:0deg, @x:0px, @y:0px){
  .transform(rotate(@deg) translateX(@x) translateY(@y));
}
.rotation-translateX(@x:0px){
  .transform(translateX(@x));
}
.rotation-translateY(@y:0px){
  .transform(translateY(@y));
}
.rotation-rotate(@deg:0deg){
  .transform(rotate(@deg));
}
.scale(@ratio:1.5){
  .transform(scale(@ratio));
}
.transition(@duration:0.2s, @ease:ease-out) {
  -webkit-transition: all @duration @ease;
  -moz-transition: all @duration @ease;
  -o-transition: all @duration @ease;
  transition: all @duration @ease;
}
#gradient {
  .vertical(@start-color: #555; @end-color: #333; @start-percent: 0%; @end-percent: 100%) {
  background-image: -webkit-linear-gradient(top, @start-color @start-percent, @end-color @end-percent);  // Safari 5.1-6, Chrome 10+
  background-image: -o-linear-gradient(top, @start-color @start-percent, @end-color @end-percent);  // Opera 12
  background-image: linear-gradient(to bottom, @start-color @start-percent, @end-color @end-percent); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
  background-repeat: repeat-x;
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@start-color),argb(@end-color))); // IE9 and down
  }
}
// --------------------------------------------------
// Flexbox LESS mixins
// The spec: http://www.w3.org/TR/css3-flexbox
// --------------------------------------------------

// Flexbox display
// flex or inline-flex
.flex-display(@display: flex) {
	display: ~"-webkit-@{display}";
	display: ~"-moz-@{display}";
	display: ~"-ms-@{display}box"; // IE10 uses -ms-flexbox
	display: ~"-ms-@{display}"; // IE11
	display: @display;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
.flex(@columns: initial) {
  -webkit-flex: @columns;
     -moz-flex: @columns;
      -ms-flex: @columns;
          flex: @columns;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
.flex-direction(@direction: row) {
  -webkit-flex-direction: @direction;
     -moz-flex-direction: @direction;
      -ms-flex-direction: @direction;
          flex-direction: @direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
.flex-wrap(@wrap: nowrap) {
  -webkit-flex-wrap: @wrap;
     -moz-flex-wrap: @wrap;
      -ms-flex-wrap: @wrap;
          flex-wrap: @wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
.flex-flow(@flow) {
  -webkit-flex-flow: @flow;
     -moz-flex-flow: @flow;
      -ms-flex-flow: @flow;
          flex-flow: @flow;
}

// Display Order
// - applies to: flex items
// <integer>
.flex-order(@order: 0) {
  -webkit-order: @order;
     -moz-order: @order;
      -ms-order: @order;
          order: @order;
}

// Flex grow factor
// - applies to: flex items
// <number>
.flex-grow(@grow: 0) {
  -webkit-flex-grow: @grow;
     -moz-flex-grow: @grow;
      -ms-flex-grow: @grow;
          flex-grow: @grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number> 
.flex-shrink(@shrink: 1) {
  -webkit-flex-shrink: @shrink;
     -moz-flex-shrink: @shrink;
      -ms-flex-shrink: @shrink;
          flex-shrink: @shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width> 
.flex-basis(@width: auto) {
  -webkit-flex-basis: @width;
     -moz-flex-basis: @width;
      -ms-flex-basis: @width;
          flex-basis: @width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around 
.justify-content(@justify: flex-start) {
  -webkit-justify-content: @justify;
     -moz-justify-content: @justify;
      -ms-justify-content: @justify;
          justify-content: @justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch 
.align-content(@align: stretch) {
  -webkit-align-content: @align;
     -moz-align-content: @align;
      -ms-align-content: @align;
          align-content: @align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch 
.align-items(@align: stretch) {
  -webkit-align-items: @align;
     -moz-align-items: @align;
      -ms-align-items: @align;
          align-items: @align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch 
.align-self(@align: auto) {
  -webkit-align-self: @align;
     -moz-align-self: @align;
      -ms-align-self: @align;
          align-self: @align;
} 